<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 지정된 위치의 properties파일을 read하는 class -->
	<context:property-placeholder location="classpath:prop/*.properties"/>
	<!-- Hikari 설정 정보 class -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- 
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}"/> 
		-->
		<!-- log4j slf4j를 이용한 db log 출력 -->
		<property name="driverClassName" value="${jdbc.log4j.driver}" />
		<property name="jdbcUrl" value="${jdbc.log4j.url}"/>
		
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 최대로 생성 유지 할수 있는 커넥션 개수 default=10 -->
		<property name="maximumPoolSize" value="200"/>
		<!-- 일을 하지 않아도 유지되는 최소 connection 수 -->
		<property name="minimumIdle" value="20"/>	
		<!-- pool에서 connection 정보를 가져오기 위해 대기하는 시간 default=250ms -->
		<property name="connectionTimeout" value="300000"/>
		<!-- 일을 하지 않는 connection을 대기(유지)하는 시간 default="60000ms" -->
		<property name="idleTimeout" value="200000"/>
	</bean>
	<bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig"/>
	</bean>	
	
	<!-- 
	<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>	
	 -->
	
	<bean id="factory" 
		  class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="typeAliasesPackage" value="com.bitc.board.vo, com.bitc.board.util"/>
		<property name="mapperLocations" value="classpath:mybatis/sql/*.xml"/>
	</bean>
	<!-- 
	<bean id="sqlSession" 
		  class="org.mybatis.spring.SqlSessionTemplate">
		  <constructor-arg ref="factory"/>
    </bean>
     -->
    <!-- 
    <bean class="org.mybatis.spring.mapper.MapperFactoryBean">
    	<property name="mapperInterface" value="com.bitc.board.dao.BoardDAO"/>
    	<property name="sqlSessionFactory" ref="factory"/>
    	<property name="sqlSessionTemplate" ref="sqlSession"/>
    </bean>
 	 -->
 	 <!-- 
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 		<property name="basePackage" value="com.bitc.*.dao" />
 		<property name="annotationClass" value="org.apache.ibatis.annotations.Mapper"/>
 	</bean> 
 	  -->
 	<mybatis-spring:scan base-package="com.bitc.*.dao"/>
 	
 	<context:component-scan base-package="com.bitc.board.service"/>
 	<!-- <context:component-scan base-package="com.bitc.board.dao"/> --> 
</beans>











